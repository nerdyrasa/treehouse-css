/* Attribute Selectors ------------- */

.form-contact {
    padding: 20px 24px;
    background: #f4f7f8;
}

#container {
    max-width: 500px;
    margin: auto;
}

input[type="email"] {
    background: #fdfee6;
}

a[target="_blank"] {
    color: #39add1;
    text-decoration: none;
    border-bottom: 1px dotted;
}

/* DRY Classes ---------------------------- */

.br {
    border-radius: 0.5em;
}

.avatar {
    display: block;
    margin: 0 auto 2em;
}

.rounded {
    border-radius: 50%;
}

.btn {
    cursor: pointer;
    font-size: .875em;
    font-weight: 400;
    color: #fff;
    padding-left: 20px;
    padding-right: 20px;
    text-transform: uppercase;
}

.btn:hover {
    opacity: .75;
}

.default {
    background-color: #52bab3;
}

.error {
    background-color: #ff784f;
}

/* target screens that are 769px or wider */
@media (min-width: 769px) {
    /* define a reusable modifier class */
    .inln {
        width: auto;
        display: inline-block;
    }
    /* Example of adjacent combinator */
    .btn + .btn {
        margin-left: 20px;
    }

}

/* Combinators

1. Child combinator:      > targets a DIRECT child of an element
2. Adjacent combinator:   + targets an element's immediate sibling
3. Generator combinator:   ~ targets all specified siblings that follow an element
*/

/* Example of child combinator  */
form > a {
    font-size: 0.7em;
}

/* Example of general sibling combinator */
h1 ~ label {
    background: tomato;
    color: white;
    padding: 5px;
}

/* Review ---------------------------------

1. Attribute selectors can target an element by any of its HTML attributes
2. DRY: Don't repeat yourself.
3. We can define specific child and sibling selectors with combinators.
